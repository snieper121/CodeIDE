# .github/workflows/android-ci.yml

name: Android CI Build

# Триггеры для запуска:
# - push в любую ветку
# - pull request в любую ветку
# - ручной запуск (workflow_dispatch)
on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]
  workflow_dispatch:

jobs:
  build:
    # Запускаем на последней версии Ubuntu
    runs-on: ubuntu-latest

    steps:
    # Шаг 1: Клонирование вашего репозитория
    - name: Checkout repository
      uses: actions/checkout@v4

    # Шаг 2: Настройка Java (JDK). Android-сборка требует JDK.
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Шаг 3: Кэширование Gradle
    # Этот шаг значительно ускоряет сборку, сохраняя зависимости и кэш Gradle
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        # Пути, которые нужно кэшировать
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        # Ключ кэша. Если файлы build.gradle.kts изменятся, кэш будет создан заново.
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
        # Ключ для восстановления, если точного совпадения не найдено
        restore-keys: |
          ${{ runner.os }}-gradle-

    # Шаг 4: Декодирование и сохранение ключа подписи из секретов
    - name: Decode Keystore
      run: |
        echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > ${{ github.workspace }}/app/debug.keystore

    # Шаг 5: Предоставление прав на исполнение для gradlew
    - name: Make gradlew executable
      run: chmod +x ./gradlew

    # Шаг 6: Сборка APK
    # Передаем данные для подписи как переменные окружения
    - name: Build with Gradle
      env:
        SIGNING_KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        SIGNING_KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        SIGNING_STORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
      run: ./gradlew assembleDebug

    # Шаг 7: Загрузка APK как артефакта
    # Это позволит вам скачать собранный APK прямо со страницы сборки.
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: app-debug-apk
        path: app/build/outputs/apk/debug/app-debug.apk
